service: my-video-chat
# app: my-video-chat
# org: mpmaia

plugins:
  - serverless-webpack
  - serverless-iam-roles-per-function

frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221

  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}

  environment:
    CONTACTS_TABLE: ${self:service}-contacts-${self:provider.stage}
    USERS_TABLE: ${self:service}-users-${self:provider.stage}
    CONNECTIONS_TABLE: ${self:service}-connections-${self:provider.stage}
    USER_ID_INDEX: UserIdIndex
    USER_EMAIL_INDEX: UserIdIndex
    USER_POOL: arn:aws:cognito-idp:us-east-1:************:userpool/us-east-1_dk8prY4fv

iamRoleStatements:
#    - Effect: "Allow"
#      Action:
#        - "s3:ListBucket"
#      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#    - Effect: "Allow"
#      Action:
#        - "s3:PutObject"
#      Resource:
#        Fn::Join:
#          - ""
#          - - "arn:aws:s3:::"
#            - "Ref" : "ServerlessDeploymentBucket"
#            - "/*"

#package:
#  patterns:
#    - '!exclude-me.js'
#    - '!exclude-me-dir/**'
#    - include-me.js
#    - include-me-dir/**

functions:
  hello:
    handler: src/handler.hello
    events:
      - http:
          path: hello
          method: get
          cors: true
          integration: lambda
          authorizer:
            name: authorizer
            arn: ${self:provider.environment.USER_POOL}
            claims:
              - email
resources:
  - ${file(./serverless-api-gateway.yml)}
  - ${file(./serverless-dynamo.yml)}
